"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=exports.createServices=exports.generateOptions=exports.addInterceptors=void 0;var _jsonFormData=_interopRequireDefault(require("json-form-data")),_queryString=require("query-string"),_checkStatus=_interopRequireDefault(require("./checkStatus")),_utils=require("./utils"),_config=_interopRequireDefault(require("./config"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _objectWithoutProperties(a,b){if(null==a)return{};var c,d,e=_objectWithoutPropertiesLoose(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(0<=b.indexOf(c))&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}}function _arrayWithHoles(a){if(Array.isArray(a))return a}/**
 * 给请求添加拦截器
 * @param {Promise} promise 请求promise实例
 * @param {Array} interceptors 拦截器数组
 * @param {String} url 当前请求的地址
 * 
 * @return {Promise} 返回添加拦截器后新的promise对象
 */var addInterceptors=function(a,b,c){return b.forEach(function(b){b instanceof Function&&(a=a.then(b)),"[object Object]"===Object.prototype.toString.call(b)&&Object.entries(b).forEach(function(b){var d=_slicedToArray(b,2),e=d[0],f=d[1];new RegExp(e).test(c)&&f instanceof Function&&(a=a.then(f))})}),a};/**
 * 组装最终请求的options对象
 * 
 * @param {Object} options 请求配置信息对象
 * @params {Object} params 请求参数
 * 
 * @return {Object} 最终发送请求的options对象 
 */exports.addInterceptors=addInterceptors;var generateOptions=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:_config["default"],d=a.url,e=a.method,f=void 0===e?"GET":e,g=a.headers,h=void 0===g?{}:g,i=_objectWithoutProperties(a,["url","method","headers"]),j={credentials:"include",method:f.toUpperCase()},k=a.dataType||c.dataType,l=function(a,b){return b instanceof FormData?b:"json"===k?JSON.stringify(b):"formdata"===k?(0,_jsonFormData["default"])(b,{mapping:function mapping(a){return a}}):(0,_queryString.stringify)(b)};if("GET"!==f.toUpperCase()){var m={json:{"Content-Type":"application/json"},"x-www-form-urlencoded":{"Content-Type":"application/x-www-form-urlencoded"}}[k]||{};Object.assign(j,_objectSpread({headers:m},i)),j.body=l(j,b)}return Object.assign(j,{headers:_objectSpread({},j.headers||{},{},(c.headers instanceof Function?c.headers():c.headers)||{},{},(h instanceof Function?h():h)||{})}),j};/**
 * 依据json配置生成services 方法集合对象
 *
 * @param {Object} config 接口方法配置对象
 * @param {Object} options 额外配置，如： { interceptors: [] }
 * @param {Object} globalConfig 全局配置对象，如错误处理(onError)、baseUrl、请求报文类型(dataType: formdata, json)
 * 
 * @return {Object} 接口方法对象如： { getUsers: params => { ... }, ...}
 */exports.generateOptions=generateOptions;var createServices=function(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{},c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:_config["default"],d={},e=c.baseUrl,f=void 0===e?"":e,g=c.redirectUrl,h=c.onError,i=b.interceptors,j=void 0===i?[]:i;j=j instanceof Array?j:[j],c.interceptors&&(j=[c.interceptors].concat(_toConsumableArray(j)));var k=function(e){var i=a[e].url;d[e]=function(d){var k=fetch((0,_utils.buildURL)(a[e],d,f),generateOptions(a[e],d,c)).then(function(a){return(0,_checkStatus["default"])(a,c)}).then(function(a){var b,c=null==a||null==(b=a.headers)?void 0:b.get("content-type");return c&&-1<c.indexOf("application/json")?a.json():a});j&&j.length&&(k=addInterceptors(k,j,i)),k=k.then(function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(a.success||302!=+a.status||(location.href="function"==typeof g?g(a):g),a&&a.success)return a.data;throw a})["finally"](function(){var a=b.errorHandle;k["catch"](h||a||function(a){console.warn("request ".concat(i," exception"),a)})});// 包装promise实例，重写then、catch方法，用来获取链式调用最后一个promise实例
// 从而实现错误处理的链式冒泡处理机制
var l=function(){var a=k.then,b=k["catch"],c=k["finally"];return k.then=function(){for(var b=arguments.length,c=Array(b),d=0;d<b;d++)c[d]=arguments[d];return k=a.apply(k,c),l()},k["catch"]=function(){for(var a=arguments.length,c=Array(a),d=0;d<a;d++)c[d]=arguments[d];return k=b.apply(k,c),l()},k["finally"]=function(){for(var a=arguments.length,b=Array(a),d=0;d<a;d++)b[d]=arguments[d];return k=c.apply(k,b),l()},k};return k=l(),k},d[e].URL=new URL((0,_utils.getFullUrl)(i,f))};for(var l in a)k(l);return d};/**
 * 设置全局配置，并返回createServices方法
 *
 * @param {Object} globalConfig 全局配置会与defaultConfig进行merge
 * 
 * @return {Function} 返回createServices方法
 */exports.createServices=createServices;var _default=function(a){return function(){var b=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},c=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{};return createServices(b,c,Object.assign({},_config["default"],a))}};exports["default"]=_default;